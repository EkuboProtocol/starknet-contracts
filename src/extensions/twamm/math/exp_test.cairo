use ekubo::extensions::twamm::math::{exp::{exp}, constants};

#[test]
fn test_exp() {
    // e^0 = 1
    assert_eq!(exp(0), 0x100000000000000000000000000000000);
    // e^(0.0000000000000000000542101086242752217003726400434970855712890625), error -1
    assert_eq!(exp(0x1), 340282366920938463481821351505477763073);
    // e^(0.000000000000000000867361737988403547205962240695953369140625), error 1
    assert_eq!(exp(0x10), 340282366920938463758522512611121037439);
    // e^(0.00000000000000001387778780781445675529539585113525390625), error 1
    assert_eq!(exp(0x100), 340282366920938468185741090301413457919);
    // e^(0.0000000000000002220446049250313080847263336181640625), error 1
    assert_eq!(exp(0x1000), 340282366920938539021238333346100019199);
    // e^(0.000000000000003552713678800500929355621337890625), error 1
    assert_eq!(exp(0x10000), 340282366920939672389194222063090401279);
    // e^(0.00000000000005684341886080801486968994140625), error 1
    assert_eq!(exp(0x100000), 340282366920957806276488442048319324159);
    // e^(0.0000000000009094947017729282379150390625), error -1
    assert_eq!(exp(0x1000000), 340282366921247948473196093237981347883);
    // e^(0.000000000014551915228366851806640625), error -1
    assert_eq!(exp(0x10000000), 340282366925890223620552157328383847083);
    // e^(0.00000000023283064365386962890625), error -1
    assert_eq!(exp(0x100000000), 340282367000166625986862317062882765483);
    // e^(0.0000000037252902984619140625), error 0
    assert_eq!(exp(0x1000000000), 340282368188589066052787253295325033813);
    // e^(0.000000059604644775390625), error 0
    assert_eq!(exp(0x10000000000), 340282387203348671577966848292792128855);
    // e^(0.00000095367431640625), error -1
    assert_eq!(exp(0x100000000000), 340282691439646864444203392380169582456);
    // e^(0.0000152587890625), error -1
    assert_eq!(exp(0x1000000000000), 340287559257411281036540525845100526901);
    // e^(0.000244140625), error -1
    assert_eq!(exp(0x10000000000000), 340365453812705166265158710766120017429);
    // e^(0.00390625), error 0
    assert_eq!(exp(0x100000000000000), 341614194448858001518548349210986147431);
    // e^(0.0625), error 0
    assert_eq!(exp(0x1000000000000000), 362228694054792897708330706853750745425);
    // e^(0.125), error 0
    assert_eq!(exp(0x2000000000000000), 385590437682379610444903081021111242050);
    // e^(0.1875), error 1
    assert_eq!(exp(0x3000000000000000), 410458884324605278747045302672787018564);
    // e^(0.25), error -1
    assert_eq!(exp(0x4000000000000000), 436931207977148949689182835287359640399);
    // e^(0.3125), error -1
    assert_eq!(exp(0x5000000000000000), 465110849819961876897005063802066305987);
    // e^(0.375), error -2
    assert_eq!(exp(0x6000000000000000), 495107922415926095027634166600617428423);
    // e^(0.4375), error -1
    assert_eq!(exp(0x7000000000000000), 527039639978086774335495300108384275440);
    // e^(0.5), error 0
    assert_eq!(exp(0x8000000000000000), 561030776386736916030812855022080227761);
    // e^(0.5625), error -1
    assert_eq!(exp(0x9000000000000000), 597214152746066100200648133048910480876);
    // e^(0.625), error -1
    assert_eq!(exp(0xa000000000000000), 635731156385511486531950475009791253446);
    // e^(0.6875), error -2
    assert_eq!(exp(0xb000000000000000), 676732293333820125464283151708592742980);
    // e^(0.75), error -2
    assert_eq!(exp(0xc000000000000000), 720377776424626984252099347839312863015);
    // e^(0.8521), error -2
    assert_eq!(exp(0xd000000000000000), 766838151331584014392864879771379942747);
    // e^(0.875), error -6
    assert_eq!(exp(0xe000000000000000), 816294962979286131831249594449188333552);
    // e^(0.9375), error -3
    assert_eq!(exp(0xf000000000000000), 868941464934009285206259196893053646191);
    // e^1, error 1
    assert_eq!(exp(0x10000000000000000), 924983374546220337150911035843336795078);
    // e^2, error 8
    assert_eq!(exp(2 * constants::X64_u128), 2514365498655717699434277416465328696985);
    // e^3, error -86
    assert_eq!(exp(3 * constants::X64_u128), 6834754045100203352782362684486003079515);
    // e^4, error 120
    assert_eq!(exp(4 * constants::X64_u128), 18578787722782836492235669422995900914061);
    // e^5, error -1150
    assert_eq!(exp(5 * constants::X64_u128), 50502381061638590010053149766929220245932);
    // e^6, error -3433
    assert_eq!(exp(6 * constants::X64_u128), 137279704733766404528564625531825993812898);
    // e^7, error -27603
    assert_eq!(exp(7 * constants::X64_u128), 373164926794020389796596697795276277152463);
    // e^8, error 13167
    assert_eq!(exp(8 * constants::X64_u128), 1014367439522435506293930954162796520996787);
    // e^9, error 10252
    assert_eq!(exp(9 * constants::X64_u128), 2757336578234365975078160713954485341829012);
    // e^(10), error -341285
    assert_eq!(exp(10 * constants::X64_u128), 7495217915559919573679589385952004519747242);

    // last valid input
    // e^(88), error -28250270430280119449491910663393939268384
    assert_eq!(
        exp(88 * constants::X64_u128),
        56202269414179362208214868742863362868341779313762687677660940959816606662721
    );
}
